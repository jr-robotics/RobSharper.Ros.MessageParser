image: microsoft/dotnet:latest

stages:
  - build
  - test
  - publish
  - deploy

build:
  stage: build
  script:
    - 'dotnet build'
  tags:
    - docker-executor

test:
  stage: test
  script:
    - "dotnet test /p:CollectCoverage=true /p:Exclude=\"[xunit*]*\""
  tags:
    - docker-executor


# Create a versioned NuGet package
# This task is only executed for the branches develop and master as well as version tags
nuget-pack:
  stage: publish
  only:
    - develop
    - master
    - /^v.*$/
  script:
    - 'export X_CI_VERSION=$(git describe | cut -c 2-)'
    - 'echo Publishing version $X_CI_VERSION'
    - 'cd Joanneum.Robotics.Ros.MessageParser'
    - 'dotnet pack -c Release -o ../nuget/ /p:Version=$X_CI_VERSION'
  artifacts:
    paths:
      - 'nuget'
      - 'Joanneum.Robotics.Ros.MessageParser/bin/Release/'
  tags:
    - docker-executor

# Deploy to JR BaGet server
# This is done for all pushes of version tags (v*) automatically
# Pushes to the master branch and web pipeline triggers must be deployed manually
.baget_base: &baget_base
    stage: deploy
    dependencies:
      - nuget-pack
    variables:
      GIT_STRATEGY: none
    environment:
      name: JR BaGet
      url: http://robv005:33333/
    script:
      - 'cd nuget'
      - 'dotnet nuget push *.nupkg -s $JR_BAGET_URL -k $JR_BAGET_API_KEY'
    tags:
      - docker-executor

baget:auto:
  <<: *baget_base
  only:
    - /^v.*$/

baget:man:
  <<: *baget_base
  only:
    - master
  when: manual


# Deploy to NuGet.org
# This task has to be triggered manually
nuget.org:
  stage: deploy
  dependencies:
    - nuget-pack
  variables:
    GIT_STRATEGY: none
  environment:
    name: NuGet.org
    url: https://www.nuget.org/
  only:
    - master
    - /^v.*$/
  script:
    - 'cd nuget'
    - 'dotnet nuget push *.nupkg -s $NUGET_ORG_URL -k $NUGET_ORG_API_KEY'
  tags:
    - docker-executor
  when: manual